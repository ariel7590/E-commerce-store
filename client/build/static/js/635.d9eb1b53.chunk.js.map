{"version":3,"file":"static/js/635.d9eb1b53.chunk.js","mappings":"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","sources":["components/form-input/form-input.component.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.component.jsx","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","pages/sign-in-and-sign-up/sign-in-and-sign-up.component.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nimport './form-input.styles.scss';\r\n\r\nconst FormInput = ({handleChange, label, ...otherProps}) => (\r\n    <div className=\"group\">\r\n        <input className=\"form-input\" onChange={handleChange} {...otherProps}/>\r\n        {\r\n            label ?\r\n            (<label className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>\r\n                {label}\r\n            </label>)\r\n            :\r\n            null\r\n        }\r\n    </div>\r\n)\r\n\r\nexport default FormInput;","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./sign-in.styles.scss\";\r\nimport FormInput from \"../form-input/form-input.component\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\nimport {\r\n\tgoogleSignInStart,\r\n\temailSignInStart,\r\n} from \"../../redux/user/user.actions\";\r\n\r\nconst SignIn = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst googleSignIn = () => dispatch(googleSignInStart());\r\n\tconst emailSignIn = (email, password) =>\r\n\t\tdispatch(emailSignInStart({ email, password }));\r\n\r\n\tconst [userCredentials, setCredentials] = useState({\r\n\t\temail: \"\",\r\n\t\tpassword: \"\",\r\n\t});\r\n\r\n\tconst { email, password } = userCredentials;\r\n\r\n\tconst handleSubmit = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\temailSignIn(email, password);\r\n\t};\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tconst { value, name } = event.target;\r\n\t\tsetCredentials({ ...userCredentials, [name]: value });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='sign-in'>\r\n\t\t\t<h2 className=\"title\">I already have account</h2>\r\n\t\t\t<span>Sign in with your email and password</span>\r\n\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\tname='email'\r\n\t\t\t\t\ttype='email'\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\tlabel='email'\r\n\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\tname='password'\r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\tlabel='password'\r\n\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<div className='buttons'>\r\n\t\t\t\t\t<CustomButton type='submit'> Sign in </CustomButton>\r\n\t\t\t\t\t<CustomButton type='button' onClick={googleSignIn} isGoogleSignIn>\r\n\t\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t\tSign in with google{\" \"}\r\n\t\t\t\t\t</CustomButton>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SignIn;\r\n","import React, { useState } from \"react\";\r\nimport \"./sign-up.styles.scss\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { signUpStart } from \"../../redux/user/user.actions\";\r\nimport FormInput from \"../form-input/form-input.component\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst SignUp = ({}) => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst [userCredentials, setCredentials] = useState({\r\n\t\tdisplayName: \"\",\r\n\t\temail: \"\",\r\n\t\tpassword: \"\",\r\n\t\tconfirmPassword: \"\",\r\n\t});\r\n\r\n\tconst { displayName, email, password, confirmPassword } = userCredentials;\r\n\r\n\tconst handleSubmit = async (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tif (password !== confirmPassword) {\r\n\t\t\tSwal.fire({\r\n\t\t\t\ticon: 'error',\r\n\t\t\t\ttitle: 'Oops...',\r\n\t\t\t\ttext: \"Passwords don't match\",\r\n\t\t\t  })\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tdispatch(signUpStart({ displayName, email, password }));\r\n\t};\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tconst { name, value } = event.target;\r\n\t\tsetCredentials({ ...userCredentials, [name]: value });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='sign-up'>\r\n\t\t\t<h2 className='title'> I do not have a account</h2>\r\n\t\t\t<span>Sign up with your email and password</span>\r\n\t\t\t<form className='sign-up-form' onSubmit={handleSubmit}>\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tname='displayName'\r\n\t\t\t\t\tvalue={displayName}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tlabel='Display Name'\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\ttype='email'\r\n\t\t\t\t\tname='email'\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t\tname='password'\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t\tname='confirmPassword'\r\n\t\t\t\t\tvalue={confirmPassword}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tlabel='Confirm Password'\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t\t<CustomButton className=\"button\" type='submit'> SIGN UP </CustomButton>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SignUp;\r\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","import React, { useState } from \"react\";\r\nimport \"./sign-in-and-sign-up.styles.scss\";\r\nimport SignIn from \"../../components/sign-in/sign-in.component\";\r\nimport SignUp from \"../../components/sign-up/sign-up.component\";\r\nimport { useRef } from \"react\";\r\n\r\nconst SignInAndSignUp = () => {\r\n\tconst [checkedRadio, setCheckedRadio] = useState(\"sign-in\");\r\n\r\n\tconst handleCheckedRadio = (e) => {\r\n\t\tsetCheckedRadio(e.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className='sign-in-and-sign-up'>\r\n\t\t\t\t<SignIn />\r\n\t\t\t\t<SignUp />\r\n\t\t\t</div>\r\n\t\t\t<div className='sign-in-and-sign-up-mobile'>\r\n            <div className={`${checkedRadio === \"sign-in\" ? \"checked-\" : \"\"}input-label`}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='radio'\r\n\t\t\t\t\tid='sign-in'\r\n\t\t\t\t\tvalue='sign-in'\r\n\t\t\t\t\tchecked={checkedRadio === \"sign-in\"}\r\n\t\t\t\t\tonChange={handleCheckedRadio}\r\n\t\t\t\t/>\r\n\t\t\t\t<label htmlFor='sign-in'>I already have account</label>\r\n            </div>\r\n\t\t\t\t{checkedRadio === \"sign-in\" ? <SignIn /> : null}\r\n            <div className={`${checkedRadio === \"sign-up\" ? \"checked-\" : \"\"}input-label`}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='radio'\r\n\t\t\t\t\tid='sign-up'\r\n\t\t\t\t\tvalue='sign-up'\r\n\t\t\t\t\tchecked={checkedRadio === \"sign-up\"}\r\n\t\t\t\t\tonChange={handleCheckedRadio}\r\n\t\t\t\t/>\r\n\t\t\t\t<label htmlFor='sign-up'>I do not have an account</label>\r\n            </div>\r\n\t\t\t\t{checkedRadio === \"sign-up\" ? <SignUp /> : null}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SignInAndSignUp;\r\n"],"names":["handleChange","label","otherProps","className","onChange","value","length","dispatch","useDispatch","emailSignIn","email","password","emailSignInStart","useState","userCredentials","setCredentials","handleSubmit","event","preventDefault","target","name","onSubmit","type","required","onClick","googleSignInStart","isGoogleSignIn","obj","TypeError","displayName","confirmPassword","Swal","icon","title","text","signUpStart","checkedRadio","setCheckedRadio","handleCheckedRadio","e","id","checked","htmlFor"],"sourceRoot":""}